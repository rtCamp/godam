/**
 * External dependencies
 */
import { useSelector } from 'react-redux';

/**
 * WordPress dependencies
 */
import { ToggleControl, TextControl, Panel, PanelBody } from '@wordpress/components';
import { __ } from '@wordpress/i18n';

const VideoThumbnails = ( { handleSettingChange } ) => {
	const videoThumbnails = useSelector( ( state ) => state.mediaSettings.video.video_thumbnails ) || 5;
	const overwriteThumbnails = useSelector( ( state ) => state.mediaSettings.video.overwrite_thumbnails ) || false;

	const setVideoThumbnails = ( value ) => {
		value = parseInt( value, 10 );

		if ( value >= 0 && value <= 10 ) {
			handleSettingChange( 'video_thumbnails', value );
		}
	};

	return (
		<Panel
			heading={ __( 'Video Thumbnails', 'godam' ) }
			className="godam-panel"
		>
			<PanelBody>
				<div className="godam-form-group">
					<label className="label-text" htmlFor="video_thumbnails_count">
						{ __( 'Number of video thumbnails generated', 'godam' ) }
					</label>
					<TextControl
						className="godam-input"
						type="number"
						min="1"
						max="10"
						value={ videoThumbnails }
						onChange={ ( value ) => setVideoThumbnails( value ) }
						help={ __( `This field specifies the number of video thumbnails that will be generated by the GoDAM. To choose from the generated thumbnails for a video, go to Media > Edit > Video Thumbnails. Thumbnails are only generated when the video is first uploaded. Please enter a value between 1 and 10`, 'godam' ) }
					/>
				</div>

				<div className="mt-4">
					<ToggleControl
						__nextHasNoMarginBottom
						className="godam-toggle"
						label={ __( 'Over-write video thumbnails', 'godam' ) }
						checked={ overwriteThumbnails }
						onChange={ ( value ) => handleSettingChange( 'overwrite_thumbnails', value ) }
						help={ __( 'If enabled, GoDAM will replace existing media thumbnails with regenerated ones after retranscoding. If disabled, media thumbnails will remain untouched', 'godam' ) }
					/>
				</div>
			</PanelBody>

		</Panel>
	);
};

export default VideoThumbnails;
