{
	"name": "GoDAM",
	"version": "1.0.3",
	"description": "A WordPress plugin to manage digital assets",
	"private": true,
	"author": "rtCamp",
	"license": "GPL-2.0-or-later",
	"keywords": [
		"rtcamp",
		"wp-plugin",
		"feature-plugin"
	],
	"homepage": "https://github.com/rtCamp/features-plugin-skeleton#readme",
	"repository": {
		"type": "git",
		"url": "https://github.com/rtCamp/features-plugin-skeleton.git"
	},
	"bugs": {
		"url": "https://github.com/rtCamp/features-plugin-skeleton/issues"
	},
	"dependencies": {
		"@dnd-kit/core": "^6.3.1",
		"@dnd-kit/sortable": "^10.0.0",
		"@dnd-kit/utilities": "^3.2.2",
		"@fortawesome/fontawesome-svg-core": "^6.7.2",
		"@fortawesome/free-solid-svg-icons": "^6.7.2",
		"@fortawesome/react-fontawesome": "^0.2.2",
		"@monaco-editor/react": "^4.7.0",
		"@reduxjs/toolkit": "^2.5.1",
		"@tailwindcss/typography": "^0.5.16",
		"@wordpress/block-editor": "^14.13.0",
		"@wordpress/blocks": "^14.7.0",
		"@wordpress/components": "^29.4.0",
		"@wordpress/i18n": "^5.18.0",
		"@wordpress/icons": "^10.18.0",
		"@wordpress/server-side-render": "^5.18.0",
		"analytics": "^0.8.16",
		"axios": "^1.7.9",
		"clsx": "^2.1.1",
		"isomorphic-dompurify": "^2.21.0",
		"quill": "^2.0.3",
		"react": "^18.3.1",
		"react-bootstrap-icons": "^1.11.5",
		"react-dom": "^18.3.1",
		"react-redux": "^9.2.0",
		"react-rnd": "^10.4.14",
		"tailwind-merge": "^3.0.1",
		"tailwindcss-animate": "^1.0.7",
		"uuid": "^11.0.5",
		"video.js": "^8.21.0",
		"videojs-contrib-ads": "^7.5.2",
		"videojs-contrib-quality-menu": "^1.0.3",
		"videojs-ima": "^2.3.0"
	},
	"devDependencies": {
		"@babel/core": "^7.21.8",
		"@wordpress/babel-preset-default": "^7.16.0",
		"@wordpress/browserslist-config": "^5.15.0",
		"@wordpress/env": "^6.0.0",
		"@wordpress/eslint-plugin": "^14.7.0",
		"@wordpress/jest-preset-default": "^11.3.0",
		"@wordpress/scripts": "^30.11.0",
		"browserslist": "^4.21.5",
		"cross-env": "^7.0.3",
		"css-minimizer-webpack-plugin": "^5.0.0",
		"eslint": "^8.40.0",
		"eslint-plugin-eslint-comments": "^3.2.0",
		"eslint-plugin-import": "^2.27.5",
		"eslint-plugin-jest": "^27.2.1",
		"file-loader": "^6.2.0",
		"jest-silent-reporter": "^0.5.0",
		"lint-staged": "^15.4.3",
		"npm-run-all": "^4.1.5",
		"postcss": "^8.4.49",
		"style-loader": "^4.0.0",
		"tailwindcss": "^3.4.15",
		"webpack-remove-empty-scripts": "^1.0.3"
  	},
	"scripts": {
		"build:dev": "cross-env NODE_ENV=development npm-run-all 'build:!(dev|prod)'",
		"build:prod": "cross-env NODE_ENV=production npm-run-all 'build:!(dev|prod)'",
		"build:blocks": "wp-scripts build --config ./node_modules/@wordpress/scripts/config/webpack.config.js --webpack-src-dir=./assets/src/blocks/ --output-path=./assets/build/blocks/",
		"build:js": "wp-scripts build --config ./webpack.config.js",
		"build:page-css": "tailwindcss -i ./pages/style.css -o ./pages/build/style.css",
		"create:block": "./bin/block-scaffold/block.js",
		"init": "./bin/init.js",
		"install:husky": "./bin/husky.sh --install",
		"install:pre-commit-hook": "./bin/pre-commit-hook.sh --install",
		"lint": "npm-run-all --parallel lint:*",
		"lint:css": "wp-scripts lint-style ./assets/src",
		"lint:css:fix": "npm run lint:css -- --fix ./assets/src",
		"lint:js": "wp-scripts lint-js ./assets/src",
		"lint:js:fix": "npm run lint:js -- --fix ./assets/src",
		"lint:js:report": "npm run lint:js -- --output-file lint-js-report.json --format json .",
		"lint:php": "vendor/bin/phpcs",
		"lint:php:fix": "./bin/phpcbf.sh",
		"lint:package-json": "wp-scripts lint-pkg-json --ignorePath .gitignore",
		"lint:staged": "lint-staged",
		"remove:husky": "./bin/husky.sh --remove",
		"remove:pre-commit-hook": "./bin/pre-commit-hook.sh --remove",
		"start:blocks": "wp-scripts start --config ./node_modules/@wordpress/scripts/config/webpack.config.js --webpack-src-dir=./assets/src/blocks/ --output-path=./assets/build/blocks/",
		"start:js": "wp-scripts start --config ./webpack.config.js",
		"start:pages-css": "npx tailwindcss -i ./pages/style.css -o ./pages/build/style.css --watch",
		"start": "npm-run-all --parallel start:*",
		"test": "npm-run-all --parallel test:*",
		"test:js": "wp-scripts test-unit-js --config=tests/js/jest.config.js --passWithNoTests",
		"test:js:watch": "npm run test:js -- --watch",
		"pretest:php": "wp-env run composer 'install --no-interaction'",
		"test:php": "wp-env run phpunit 'env WP_TESTS_DIR=/var/www/wordpress-develop/tests/phpunit WP_PHPUNIT__TESTS_CONFIG=/wordpress-phpunit/wp-tests-config.php phpunit -c /var/www/html/wp-content/plugins/$(basename \"$PWD\")/phpunit.xml.dist --verbose'",
		"pretest:php:coverage": "echo \"\\e[1m\\e[32mMake sure you have run npm run wp-env start -- --xdebug=coverage before using this command\\e[0m\" && wp-env run composer 'install --no-interaction'",
		"test:php:coverage": "wp-env run tests-wordpress 'env WP_TESTS_DIR=/var/www/wordpress-develop/tests/phpunit WP_PHPUNIT__TESTS_CONFIG=/wordpress-phpunit/wp-tests-config.php /var/www/html/wp-content/plugins/$(basename \"$PWD\")/vendor/bin/phpunit -c /var/www/html/wp-content/plugins/$(basename \"$PWD\")/phpunit.xml.dist --coverage-html /var/www/html/wp-content/plugins/$(basename \"$PWD\")/coverage'",
		"posttest:php:coverage": "echo \"\\e[1m\\e[32mIf you have run this command with xdbug coverage enabled, you can view the coverage report at /coverage path\\e[0m\"",
		"wp-env": "wp-env"
	}
}
